import { decode } from 'decode-formdata';
import { FormOptions, ValidationError, Validator } from '@tanstack/form-core';
import { ServerFormState } from './types.cjs';

type OnServerValidateFn<TFormData> = (props: {
    value: TFormData;
}) => ValidationError;
interface CreateServerValidateOptions<TFormData, TFormValidator extends Validator<TFormData, unknown> | undefined = undefined> extends FormOptions<TFormData, TFormValidator> {
    onServerValidate: OnServerValidateFn<TFormData>;
}
export declare const createServerValidate: <TFormData, TFormValidator extends Validator<TFormData, unknown> | undefined = undefined>(defaultOpts: CreateServerValidateOptions<TFormData, TFormValidator>) => (formData: FormData, info?: Parameters<typeof decode>[1]) => Promise<void>;
export declare const initialFormState: ServerFormState<any>;
export {};
